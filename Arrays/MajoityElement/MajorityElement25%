Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

Example 1:
Input: nums = [3,2,3]
Output: [3]

Example 2:
Input: nums = [1]
Output: [1]

Example 3:
Input: nums = [1,2]
Output: [1,2]

Solution

class Solution {
    public List<Integer> majorityElement(int[] nums) {
        int freq = nums.length / 3;
        List<Integer> al = new ArrayList<>();

        HashMap<Integer, Integer> count = new HashMap<>();
        for(int i = 0; i < nums.length; i++){
            count.put(nums[i], count.getOrDefault(nums[i], 0)+1);
            if(count.get(nums[i]) > freq && !al.contains(nums[i])){
                al.add(nums[i]);
            }
        }
        return al;
    }
}
Time Complexity : O(N)
