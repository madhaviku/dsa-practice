Longest Palindromic Subsequence
Given a string s, find the longest palindromic subsequence's length in s.
A subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.

Input: s = "bbbab"
Output: 4
Explanation: One possible longest palindromic subsequence is "bbbb".

class Solution {
    String s;
    HashMap<String, Integer> cache = new HashMap<>();
    private int palSubseq(String a, String b, int m, int n){
        if(m <= 0 || n <= 0) return 0;
        String key = m+"_"+n;
        if(cache.containsKey(key)) return cache.get(key);

        if(a.charAt(m-1) == b.charAt(n-1)){
            cache.put(key, 1 + palSubseq(a, b, m-1, n-1)); 
        } else {
            cache.put(key, Math.max(palSubseq(a,b,m-1, n), palSubseq(a,b,m,n-1)));
        }

        return cache.get(key);
    }
    public int longestPalindromeSubseq(String s) {
        this.s = s;
        StringBuilder sb = new StringBuilder(s);
        String rev = sb.reverse().toString();
        return palSubseq(s, rev, s.length(), s.length());
    }
}
